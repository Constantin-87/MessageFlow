name: Deploy to IIS

on:
  push:
    branches:
      - master
      - preprod

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Project
      run: dotnet build --configuration Release

    - name: Display Deploy Environment
      run: echo "Deploying to ${{ env.DEPLOY_ENV }}"
      shell: bash

    - name: Publish Server Project
      run: dotnet publish MessageFlow.Server/MessageFlow.Server.csproj -c Release -o ${{ github.workspace }}/publish/Server

    - name: Publish Identity Project
      run: dotnet publish MessageFlow.Identity/MessageFlow.Identity.csproj -c Release -o ${{ github.workspace }}/publish/Identity

    - name: Publish Client Project
      run: dotnet publish MessageFlow.Client/MessageFlow.Client.csproj -c Release -o ${{ github.workspace }}/publish/Client    

    - name: Set Deployment Environment
      id: set-env
      shell: pwsh
      run: |
        if ("${{ github.ref }}" -eq "refs/heads/master") {
          "DEPLOY_ENV=Production" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SERVER=${{ secrets.WEB_DEPLOY_SERVER_PROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_USER=${{ secrets.WEB_DEPLOY_USER_PROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PASSWORD=${{ secrets.WEB_DEPLOY_PASSWORD_PROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SITE=${{ vars.WEB_DEPLOY_SITE_PROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PATH=${{ vars.WEB_DEPLOY_PATH_PROD }}" >> $env:GITHUB_ENV
          "APPSETTINGS_FILE=appsettings.production.json" >> $env:GITHUB_ENV
          "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING_PROD }}" >> $env:GITHUB_ENV
        }
        elseif ("${{ github.ref }}" -eq "refs/heads/preprod") {
          "DEPLOY_ENV=Preprod" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SERVER=${{ secrets.WEB_DEPLOY_SERVER_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_USER=${{ secrets.WEB_DEPLOY_USER_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PASSWORD=${{ secrets.WEB_DEPLOY_PASSWORD_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SITE=${{ vars.WEB_DEPLOY_SITE_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PATH=${{ vars.WEB_DEPLOY_PATH_PREPROD }}" >> $env:GITHUB_ENV
          "APPSETTINGS_FILE=appsettings.preprod.json" >> $env:GITHUB_ENV
          "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING_PREPROD }}" >> $env:GITHUB_ENV
        }

    - name: Create Identity AppSettings
      shell: pwsh
      run: |
        $identityAppSettingsPath = "${{ github.workspace }}/publish/Identity/appsettings.${{ env.DEPLOY_ENV }}.json"
        echo '{
          "ConnectionStrings": {
            "DBConnectionString": "' + "${{ env.DB_CONNECTION_STRING }}" + '"
          },
          "ServerBaseAddress": "https://${{ env.WEB_DEPLOY_SERVER }}",
          "AzureKeyVaultURL": "' + "${{ env.AzureKeyVaultURL }}" + '",
          "WebHostUrls": [ "http://*:80", "https://*:443" ],
          "Logging": {
            "LogLevel": {
              "Default": "Information",
              "Microsoft.AspNetCore": "Warning"
            }
          },
          "AllowedHosts": "*"
        }' | Out-File -FilePath $identityAppSettingsPath -Encoding utf8 -Force
       
    - name: Create Server AppSettings
      shell: pwsh
      run: |
        $serverAppSettingsPath = "${{ github.workspace }}/publish/Server/appsettings.${{ env.DEPLOY_ENV }}.json"
        echo '{
          "ConnectionStrings": {
            "DBConnectionString": "' + "${{ env.DB_CONNECTION_STRING }}" + '"
          },
          "AzureKeyVaultURL": "' + "${{ env.AzureKeyVaultURL }}" + '",
          "WebHostUrls": [ "http://*:80", "https://*:443" ],
          "MessageFlow-Identity-Uri": "https://${{ env.WEB_DEPLOY_SERVER }}",
          "Logging": {
            "LogLevel": {
              "Default": "Information",
              "Microsoft.EntityFrameworkCore": "Warning",
              "Microsoft.EntityFrameworkCore.Database.Command": "Error",
              "Microsoft.EntityFrameworkCore.Model.Validation": "None"
            }
          },
          "AllowedHosts": "*"
        }' | Out-File -FilePath $serverAppSettingsPath -Encoding utf8 -Force

    - name: Create Client appsettings.json in wwwroot
      shell: pwsh
      run: |
        $clientSettingsPath = "${{ github.workspace }}/publish/Client/wwwroot/appsettings.json"
        echo '{
          "Logging": {
            "LogLevel": {
              "Default": "Information",
              "Microsoft.AspNetCore": "Warning"
            }
          },
          "AllowedHosts": "*",
          "IdentityApiUrl": "https://${{ env.WEB_DEPLOY_SERVER }}/identity",
          "ServerApiUrl": "https://${{ env.WEB_DEPLOY_SERVER }}/server",
          "SocialLinks": {
            "LinkedIn": "https://www.linkedin.com/in/constantin-gavrila-dev/",
            "Twitter": "https://twitter.com/DontHaveATwitterPage",
            "GitHub": "https://github.com/Constantin-87",
            "YouTube": "https://www.youtube.com/watch?v=xvFZjo5PgG0&ab_channel=Duran",
            "Facebook": "https://www.facebook.com/profile.php?id=61566864236921"
          }
        }' | Out-File -FilePath $clientSettingsPath -Encoding utf8 -Force

    - name: Apply Entity Framework Migrations
      shell: pwsh
      run: |
        dotnet tool install --global dotnet-ef --version 8.0.10
        dotnet ef database update `
          --project "${{ github.workspace }}/MessageFlow.DataAccess/MessageFlow.DataAccess.csproj" `
          --startup-project "${{ github.workspace }}/MessageFlow.Server/MessageFlow.Server.csproj" `
          --connection "${{ env.DB_CONNECTION_STRING }}"

    - name: Stop IIS before Deployment
      shell: pwsh
      run: |
        Write-Host "Stopping IIS to release locked files..."
        iisreset /stop

    - name: Deploy Client to IIS
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" ^
        -verb:sync ^
        -source:contentPath="${{ github.workspace }}/publish/Client" ^
        -dest:contentPath="C:\inetpub\MessageFlowClient",computerName="https://${{ env.WEB_DEPLOY_SERVER }}:8172/msdeploy.axd?site=MessageFlow.Client",userName="${{ env.WEB_DEPLOY_USER }}",password="${{ env.WEB_DEPLOY_PASSWORD }}",authType="Basic" ^
        -allowUntrusted ^
        -retryAttempts:2 ^
        -retryInterval:5000

    - name: Deploy Identity to IIS
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" ^
        -verb:sync ^
        -source:contentPath="${{ github.workspace }}/publish/Identity" ^
        -dest:contentPath="C:\inetpub\MessageFlowIdentity",computerName="https://${{ env.WEB_DEPLOY_SERVER }}:8172/msdeploy.axd?site=MessageFlow.Identity",userName="${{ env.WEB_DEPLOY_USER }}",password="${{ env.WEB_DEPLOY_PASSWORD }}",authType="Basic" ^
        -allowUntrusted ^
        -retryAttempts:2 ^
        -retryInterval:5000

    - name: Deploy Server to IIS
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" ^
        -verb:sync ^
        -source:contentPath="${{ github.workspace }}/publish/Server" ^
        -dest:contentPath="C:\inetpub\MessageFlowServer",computerName="https://${{ env.WEB_DEPLOY_SERVER }}:8172/msdeploy.axd?site=MessageFlow.Server",userName="${{ env.WEB_DEPLOY_USER }}",password="${{ env.WEB_DEPLOY_PASSWORD }}",authType="Basic" ^
        -allowUntrusted ^
        -retryAttempts:2 ^
        -retryInterval:5000


    - name: Start IIS after Deployment
      shell: pwsh
      run: |
        Write-Host "Starting IIS after deployment..."
        iisreset /start
        