name: Deploy to IIS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Project
      run: dotnet build --configuration Release

    - name: Display Deploy Environment
      run: echo "Deploying to ${{ env.DEPLOY_ENV }}"
      shell: bash
      
    - name: Publish Server Project
      run: dotnet publish MessageFlow.Server/MessageFlow.Server.csproj -c Release -o ${{ github.workspace }}/publish/Server

    - name: Publish Identity Project
      run: dotnet publish MessageFlow.Identity/MessageFlow.Identity.csproj -c Release -o ${{ github.workspace }}/publish/Identity   

    - name: Set Deployment Environment
      id: set-env
      shell: pwsh
      run: |
        if ("${{ github.ref }}" -eq "refs/heads/master") {
          "DEPLOY_ENV=TEST" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SERVER=${{ secrets.WEB_DEPLOY_SERVER_TEST }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_USER=${{ secrets.WEB_DEPLOY_USER_TEST }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PASSWORD=${{ secrets.WEB_DEPLOY_PASSWORD_TEST }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SITE=${{ vars.WEB_DEPLOY_SITE_TEST }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PATH=${{ vars.WEB_DEPLOY_PATH_TEST }}" >> $env:GITHUB_ENV
          "APPSETTINGS_FILE=appsettings.WEB_DEPLOY_SITE_TEST.json" >> $env:GITHUB_ENV
          "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING_TEST }}" >> $env:GITHUB_ENV
          "AzureKeyVaultURL=${{ vars.AZURE_KEY_VAULT_URL_TEST }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_DOMAIN=${{ vars.WEB_DEPLOY_DOMAIN_TEST }}" >> $env:GITHUB_ENV
        }
        elseif ("${{ github.ref }}" -eq "refs/heads/preprod") {
          "DEPLOY_ENV=Preprod" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SERVER=${{ secrets.WEB_DEPLOY_SERVER_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_USER=${{ secrets.WEB_DEPLOY_USER_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PASSWORD=${{ secrets.WEB_DEPLOY_PASSWORD_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_SITE=${{ vars.WEB_DEPLOY_SITE_PREPROD }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_PATH=${{ vars.WEB_DEPLOY_PATH_PREPROD }}" >> $env:GITHUB_ENV
          "APPSETTINGS_FILE=appsettings.preprod.json" >> $env:GITHUB_ENV
          "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING_PREPROD }}" >> $env:GITHUB_ENV
          "AzureKeyVaultURL=${{ vars.AZURE_KEY_VAULT_URL }}" >> $env:GITHUB_ENV
          "WEB_DEPLOY_DOMAIN=${{ vars.WEB_DEPLOY_DOMAIN_PREPROD }}" >> $env:GITHUB_ENV
        }

    - name: Create Server AppSettings
      shell: pwsh
      run: |
        $path = "${{ github.workspace }}/publish/Server/appsettings.${{ env.DEPLOY_ENV }}.json"
        $json = @"
        {
          "ConnectionStrings": {
            "DBConnectionString": "${{ env.DB_CONNECTION_STRING }}"
          },
          "AzureKeyVaultURL": "${{ env.AzureKeyVaultURL }}",
          "MessageFlow-Identity-Uri": "https://${{ env.WEB_DEPLOY_DOMAIN }}/identity/",
          "Serilog": {
            "MinimumLevel": {
              "Default": "Information",
              "Override": {
                "Microsoft": "Debug",
                "Microsoft.AspNetCore.SignalR": "Debug",
                "Microsoft.Hosting.Lifetime": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            }
          },
          "AllowedHosts": "*"
        }
        "@
        $json | Out-File -FilePath $path -Encoding utf8 -Force


    - name: Create Identity AppSettings
      shell: pwsh
      run: |
        $path = "${{ github.workspace }}/publish/Identity/appsettings.${{ env.DEPLOY_ENV }}.json"
        $json = @"
        {
          "ConnectionStrings": {
            "DBConnectionString": "${{ env.DB_CONNECTION_STRING }}"
          },
          "AzureKeyVaultURL": "${{ env.AzureKeyVaultURL }}",
          "Serilog": {
            "MinimumLevel": {
              "Default": "Information",
              "Override": {
                "Microsoft": "Debug",
                "Microsoft.AspNetCore.SignalR": "Debug",
                "Microsoft.Hosting.Lifetime": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            }
          },
          "AllowedHosts": "*"
        }
        "@
            $json | Out-File -FilePath $path -Encoding utf8 -Force   

    - name: Apply Entity Framework Migrations
      shell: pwsh
      run: |        
        $env:DOTNET_HOST_FACTORY_RESOLVER_DEFAULT_TIMEOUT_IN_SECONDS = 15    
        dotnet tool install --global dotnet-ef --version 8.0.10
        dotnet ef database update `
          --project "${{ github.workspace }}/MessageFlow.DataAccess/MessageFlow.DataAccess.csproj" `
          --startup-project "${{ github.workspace }}/MessageFlow.Server/MessageFlow.Server.csproj" `
          --connection "${{ env.DB_CONNECTION_STRING }}"

    - name: Stop IIS before Deployment
      shell: pwsh
      run: |
        Write-Host "Stopping IIS to release locked files..."
        iisreset /stop    

    - name: Deploy Server
      shell: cmd
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" ^
        -verb:sync ^
        -source:contentPath="${{ github.workspace }}\publish\Server" ^
        -dest:contentPath="${{ env.WEB_DEPLOY_SITE }}/Server",computerName="https://${{ env.WEB_DEPLOY_SERVER }}:8172/msdeploy.axd?site=${{ env.WEB_DEPLOY_SITE }}",userName="${{ env.WEB_DEPLOY_USER }}",password="${{ env.WEB_DEPLOY_PASSWORD }}",authType="Basic" ^
        -allowUntrusted

    - name: Deploy Identity
      shell: cmd
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" ^
        -verb:sync ^
        -source:contentPath="${{ github.workspace }}\publish\Identity" ^
        -dest:contentPath="${{ env.WEB_DEPLOY_SITE }}/Identity",computerName="https://${{ env.WEB_DEPLOY_SERVER }}:8172/msdeploy.axd?site=${{ env.WEB_DEPLOY_SITE }}",userName="${{ env.WEB_DEPLOY_USER }}",password="${{ env.WEB_DEPLOY_PASSWORD }}",authType="Basic" ^
        -allowUntrusted

    - name: Start IIS after Deployment
      shell: pwsh
      run: |
        Write-Host "Starting IIS after deployment..."
        iisreset /start
        