name: Deploy to IIS

on:
  push:
    branches:
      - master
      - preprod

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Project
      run: dotnet build --configuration Release

    - name: Publish Project
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish

    - name: Set Deployment Environment
      id: set-env
      shell: pwsh
      run: |
        if ("${{ github.ref }}" -eq "refs/heads/master") {
          echo "DEPLOY_ENV=Production" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_SERVER=${{ secrets.WEB_DEPLOY_SERVER_PROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_USER=${{ secrets.WEB_DEPLOY_USER_PROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_PASSWORD=${{ secrets.WEB_DEPLOY_PASSWORD_PROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_SITE=${{ vars.WEB_DEPLOY_SITE_PROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_PATH=${{ vars.WEB_DEPLOY_PATH_PROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING_PROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
        }
        elseif ("${{ github.ref }}" -eq "refs/heads/preprod") {
          echo "DEPLOY_ENV=Preprod" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_SERVER=${{ secrets.WEB_DEPLOY_SERVER_PREPROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_USER=${{ secrets.WEB_DEPLOY_USER_PREPROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_PASSWORD=${{ secrets.WEB_DEPLOY_PASSWORD_PREPROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_SITE=${{ vars.WEB_DEPLOY_SITE_PREPROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "WEB_DEPLOY_PATH=${{ vars.WEB_DEPLOY_PATH_PREPROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING_PREPROD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
        }

    - name: Apply Entity Framework Migrations
      shell: pwsh
      run: |
        dotnet tool install --global dotnet-ef
        dotnet ef database update --project "${{ github.workspace }}/MessageFlow/MessageFlow.csproj" --connection "${{ env.DB_CONNECTION_STRING }}"


    - name: Temporarily Take App Offline
      shell: pwsh
      run: |
        if (!(Test-Path "${{ env.WEB_DEPLOY_PATH }}\app_offline.htm")) {
            New-Item -Path "${{ env.WEB_DEPLOY_PATH }}\app_offline.htm" -ItemType File -Force
        }
        Set-Content -Path "${{ env.WEB_DEPLOY_PATH }}\app_offline.htm" -Value "Application offline for deployment"



    - name: Deploy to IIS via Web Deploy
      env:
        ASPNETCORE_ENVIRONMENT: ${{ env.DEPLOY_ENV }}
        DB_CONNECTION_STRING: ${{ env.DB_CONNECTION_STRING }}
        WEB_DEPLOY_SERVER: ${{ env.WEB_DEPLOY_SERVER }}
        WEB_DEPLOY_USER: ${{ env.WEB_DEPLOY_USER }}
        WEB_DEPLOY_PASSWORD: ${{ env.WEB_DEPLOY_PASSWORD }}
        WEB_DEPLOY_SITE: ${{ env.WEB_DEPLOY_SITE }}
        WEB_DEPLOY_PATH: ${{ env.WEB_DEPLOY_PATH }}

      shell: cmd
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" ^
        -verb:sync ^
        -source:contentPath="${{ github.workspace }}/publish" ^
        -dest:contentPath="${{ env.WEB_DEPLOY_PATH }}",computerName="https://${{ env.WEB_DEPLOY_SERVER }}:8172/msdeploy.axd?site=${{ env.WEB_DEPLOY_SITE }}",userName="${{ env.WEB_DEPLOY_USER }}",password="${{ env.WEB_DEPLOY_PASSWORD }}",authType="Basic" ^
        -allowUntrusted ^
        -retryAttempts:2 ^
        -skip:Directory="logs" ^
        -retryInterval:5000

    - name: Bring App Back Online
      shell: cmd
      run: del "${{ env.WEB_DEPLOY_PATH }}\app_offline.htm"