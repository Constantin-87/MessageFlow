@page "/ChannelSetup/{companyId:int}/WhatsApp"
@attribute [Authorize(Roles = "Admin, SuperAdmin")]
@rendermode RenderMode.InteractiveServer

@inject WhatsAppService WhatsAppService
@inject NavigationManager NavigationManager
@inject CompanyManagementService CompanyService

<h3>WhatsApp Connection Settings</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (company != null)
{
    <EditForm Model="whatsAppSettings" OnValidSubmit="HandleValidSubmit" FormName="WhatsAppSettingsForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="businessAccountId" class="form-label">Business Account Id</label>
            <InputText id="businessAccountId" class="form-control" @bind-Value="whatsAppSettings.BusinessAccountId" />
        </div>

        <div class="mb-3">
            <label for="accessToken" class="form-label">Access Token</label>
            <InputText id="accessToken" class="form-control" @bind-Value="whatsAppSettings.AccessToken" />
        </div>

        <div class="mb-3">
            <label for="webhookVerifyToken" class="form-label">Webhook Verify Token</label>
            <InputText id="webhookVerifyToken" class="form-control" @bind-Value="whatsAppSettings.WebhookVerifyToken" />
        </div>

        <h4>Phone Numbers</h4>
        <div>
            @foreach (var phoneNumber in whatsAppSettings.PhoneNumbers)
            {
                <div class="mb-2">
                    <input class="form-control mb-1" placeholder="Phone Number" @bind="phoneNumber.PhoneNumber" />
                    <input class="form-control mb-1" placeholder="Phone Number ID" @bind="phoneNumber.PhoneNumberId" />
                    <input class="form-control mb-1" placeholder="Description" @bind="phoneNumber.PhoneNumberDesc" />
                </div>
            }
        </div>

        <button type="button" class="btn btn-secondary mb-3" @onclick="AddPhoneNumber">Add Phone Number</button>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="NavigateBack">Cancel</button>
    </EditForm>
}
else
{
    <p>Company not found.</p>
}

@code {
    private WhatsAppSettingsModel whatsAppSettings = new();
    private Company? company;
    private bool isLoading = true;

    [Parameter]
    public int companyId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await using var dbContext = CompanyService.CreateDbContext();
        company = await CompanyService.GetCompanyByIdAsync(dbContext, companyId);
        if (company != null)
        {
            whatsAppSettings = await WhatsAppService.GetWhatsAppSettingsAsync(companyId) ?? new WhatsAppSettingsModel();
        }
        isLoading = false;
    }

    private async Task HandleValidSubmit()
    {
        var success = await WhatsAppService.SaveWhatsAppSettingsAsync(companyId, whatsAppSettings);
        if (success)
        {
            NavigationManager.NavigateTo($"/ChannelSetup");
        }
        else
        {
            // Handle error
        }
    }

    private void AddPhoneNumber()
    {
        whatsAppSettings.PhoneNumbers.Add(new PhoneNumberInfo());
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo($"/ChannelSetup");
    }
}
