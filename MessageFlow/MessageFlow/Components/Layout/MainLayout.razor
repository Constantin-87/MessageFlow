@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor

<div class="container-fluid">
    <div class="row">

        @if (!IsLoginPage && IsAuthenticated)
        {
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block bg-dark sidebar">
                <NavMenu/>
            </nav>
        }

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <article class="content">
                @Body
            </article>
        </main>

    </div>
</div>

@code {
    private bool IsLoginPage => NavigationManager.Uri.Contains("Login");
    private bool IsAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        await UpdateLastActivity();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        IsAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }

    public async Task UpdateLastActivity()
    {
        if (IsAuthenticated)
        {
            var userId = UserManager.GetUserId(HttpContextAccessor.HttpContext.User);
            var user = await UserManager.FindByIdAsync(userId);
            if (user != null)
            {
                user.LastActivity = DateTime.UtcNow;
                await UserManager.UpdateAsync(user);
            }
        }
    }
}
