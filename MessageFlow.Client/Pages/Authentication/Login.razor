@page "/Login"
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="LoginUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = "";

    private async Task LoginUser()
    {
        var (success, redirectUrl) = await AuthService.LoginAsync(loginModel);

        if (success)
        {
            Navigation.NavigateTo(redirectUrl, forceLoad: true);
        }
        else
        {
            errorMessage = "Invalid username or password.";
        }
    }
}
