@page "/Accounts/Login"
@layout Pages.Shared.Layout.PublicSubLayout
@rendermode RenderMode.InteractiveWebAssembly
@inject AuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<section class="d-flex align-items-center justify-content-center" style="min-height: 80vh;">
    <div class="card shadow p-4" style="max-width: 400px; width: 100%;">
        <h3 class="text-center mb-4">Login to MessageFlow</h3>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <EditForm Model="loginModel" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Login</button>
        </EditForm>
    </div>
</section>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = "";

    private async Task LoginUser()
    {
        var (success, redirectUrl) = await AuthService.LoginAsync(loginModel);

        if (success)
        {
            Navigation.NavigateTo(redirectUrl);
        }
        else
        {
            errorMessage = "Invalid username or password.";
        }
    }
}
