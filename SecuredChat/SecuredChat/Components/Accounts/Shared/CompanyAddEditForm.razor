@attribute [Authorize(Roles = "SuperAdmin")]
@rendermode RenderMode.InteractiveServer

<EditForm Model="Company" OnValidSubmit="HandleSubmit" FormName="CompanyForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3>@Title</h3>

    <!-- Account Number -->
    <div class="form-floating mb-3">
        <InputText @bind-Value="Company.AccountNumber" class="form-control" placeholder="Company Account Number" />
        <label for="accountNumber">Company Account Number</label>
        <ValidationMessage For="() => Company.AccountNumber" class="text-danger" />
    </div>

    <!-- Company Name -->
    <div class="form-floating mb-3">
        <InputText @bind-Value="Company.CompanyName" class="form-control" placeholder="Company Name" />
        <label for="companyName">Company Name</label>
        <ValidationMessage For="() => Company.CompanyName" class="text-danger" />
    </div>

    <!-- Add Team -->
    <div class="form-floating mb-3">
        <InputText @bind-Value="newTeamName" class="form-control" placeholder="Add New Team" />
        <label for="newTeam">Add New Team</label>
        <button class="btn btn-secondary" type="button" @onclick="AddTeam">Add Team</button>
    </div>

    <!-- Show Added Teams -->
    <ul class="list-group">
        @foreach (var team in Company.Teams)
        {
            <li class="list-group-item">@team.TeamName</li>
        }
    </ul>

    <!-- Submit Button -->
    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public bool IsEditMode { get; set; } = false;

    [Parameter]
    public Company Company { get; set; } = new Company();

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    private string newTeamName = string.Empty;

    private string Title => IsEditMode ? $"Edit Company {Company.CompanyName}" : "Create New Company";

    private async Task HandleSubmit()
    {
        // Handle form submission
        if (OnValidSubmit.HasDelegate)
        {
            await OnValidSubmit.InvokeAsync();
        }
    }

    private void AddTeam()
    {
        if (!string.IsNullOrWhiteSpace(newTeamName))
        {
            Company.Teams.Add(new Team { TeamName = newTeamName });
            newTeamName = string.Empty;
        }
    }
}
