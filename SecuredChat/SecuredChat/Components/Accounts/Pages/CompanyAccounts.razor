@page "/Accounts/CompanyAccounts"
@attribute [Authorize(Roles = "SuperAdmin")]
@rendermode RenderMode.InteractiveServer

@inject CompanyManagementService CompanyManagementService
@inject NavigationManager NavigationManager

<h3>Company Accounts</h3>

<button class="btn btn-primary mb-3" @onclick="NavigateToCreateCompany">Create New Company Account</button>

@if (companies == null)
{
    <p>Loading...</p>
}
else if (companies.Count == 0)
{
    <p>No company accounts available.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Account Number</th>
                <th>Company Name</th>
                <th>Total Users</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var company in companies)
            {
                <tr>
                    <td>@company.Id</td>
                    <td>@company.AccountNumber</td>
                    <td>@company.CompanyName</td>
                    <td>@company.TotalUsers</td>
                    <td>
                        <button class="btn btn-secondary" @onclick="() => NavigateToEditCompany(company.Id)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CompanyInfo> companies = new();

    protected override async Task OnInitializedAsync()
    {
        companies = await CompanyManagementService.GetAllCompaniesAsync();
    }

    private void NavigateToCreateCompany()
    {
        NavigationManager.NavigateTo("/Accounts/Create-company");
    }

    private void NavigateToEditCompany(int companyId)
    {
        NavigationManager.NavigateTo($"/edit-company/{companyId}");
    }       
}
